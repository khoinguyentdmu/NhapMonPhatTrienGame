package movement;
import movement.*;

/**
 * Character mô tả character trong game
 * @author KHOI
 *
 */
public class Charater {
	private Vector2D position;	// Vị trí charater
	private double orientation;	// Hướng mặt character
	private Vector2D velocity;	// Vận tốc di chuyển character
	private double rotation;	// Vận tốc xoay quanh character
	
	// Getter
	// Setter
	public Vector2D getPosition() {
		return position;
	}

	public void setPosition(Vector2D position) {
		this.position = position;
	}

	public double getOrientation() {
		return orientation;
	}

	public void setOrientation(double orientation) {
		this.orientation = orientation;
	}

	public Vector2D getVelocity() {
		return velocity;
	}

	public void setVelocity(Vector2D velocity) {
		this.velocity = velocity;
	}

	public double getRotation() {
		return rotation;
	}

	public void setRotation(double rotation) {
		this.rotation = rotation;
	}
	
	public Charater() {
		super();
	}

	/**
	 * Constructer Charater
	 * @param position Vị trí của charater
	 * @param orientation Hướng mặt character
	 * @param velocity Vận tốc di chuyển character
	 * @param rotation Vận tốc xoay quanh character
	 */
	public Charater(Vector2D position, double orientation, Vector2D velocity, double rotation) {
		super();
		this.position = position;
		this.orientation = orientation;
		this.velocity = velocity;
		this.rotation = rotation;
	}
	
	@Override
	public String toString() {
		return "Charater [position=" + position + ", orientation=" + orientation + ", velocity=" + velocity
				+ ", rotation=" + rotation + "]";
	}

	/**
	 * Cập nhật KinematicOutputFlee & thời gian
	 * @param KinematicOutputFlee Vận tốc di chuyển & vận tốc xoay quanh của charater
	 * @param time Đơn vị thời gian di chuyển
	 */
	public void update(KinematicOutputFlee KinematicOutputFlee, double time){
		// Cập nhật vận tốc di chuyển & vận tốc xoay quanh của charater
		this.velocity = KinematicOutputFlee.getVelocity();
		this.rotation = KinematicOutputFlee.getRotation();
		
		// Tính toán và cập nhật lại vị trí, hướng mặt của charater
		this.position.addVector2D(this.velocity.mulConstant(time));
		this.orientation += this.rotation*time;
	}
	
	/**
	 * Tính toán lại hướng mặt của charater
	 */
	public void applyNewOrientation(){
		if (this.velocity.getLength()>0){
			this.orientation = Math.atan2(-this.velocity.getX(), this.velocity.getZ());
		}
	}
}	
